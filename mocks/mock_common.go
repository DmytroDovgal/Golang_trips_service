// Code generated by MockGen. DO NOT EDIT.
// Source: team-project/services/common (interfaces: Common)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockCommon is a mock of Common interface
type MockCommon struct {
	ctrl     *gomock.Controller
	recorder *MockCommonMockRecorder
}

// MockCommonMockRecorder is the mock recorder for MockCommon
type MockCommonMockRecorder struct {
	mock *MockCommon
}

// NewMockCommon creates a new mock instance
func NewMockCommon(ctrl *gomock.Controller) *MockCommon {
	mock := &MockCommon{ctrl: ctrl}
	mock.recorder = &MockCommonMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCommon) EXPECT() *MockCommonMockRecorder {
	return m.recorder
}

// RenderJSON mocks base method
func (m *MockCommon) RenderJSON(arg0 http.ResponseWriter, arg1 *http.Request, arg2 int, arg3 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RenderJSON", arg0, arg1, arg2, arg3)
}

// RenderJSON indicates an expected call of RenderJSON
func (mr *MockCommonMockRecorder) RenderJSON(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RenderJSON", reflect.TypeOf((*MockCommon)(nil).RenderJSON), arg0, arg1, arg2, arg3)
}
