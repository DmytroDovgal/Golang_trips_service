swagger: '2.0'
info:
  title: Team project Service API
  version: 1.0.0
schemes:
  - http
host: team-projectv1.herokuapp.com
basePath: /api/v1
produces:
  - application/json
consumes:
  - application/json
tags:
- name: "train"
  description: "Train CRUD"
paths:
  /hello/{name}:
    get:
      summary: Hello message test
      tags:
        - HelloMessage
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Message is successfully
          schema:
            $ref: "#/definitions/HelloMessage"
        '404':
          description: Failed
          schema:
            $ref: "#/definitions/ErrorMessage"
  /User:
    get:
      summary: Get all users info
      tags:
        - get all users
      responses:
        '200':
          description: All users sent
          schema:
            $ref: "#/definitions/User"
        '404':
          description: Failed to add user
          schema:
            $ref: "#/definitions/ErrorMessage"
    post:
      summary: Post user to DB
      tags:
        - post user
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: The user to create
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        '201':
          description: User created
          schema:
            $ref: "#/definitions/User"
        '400':
          description: Can't add this user or can't parse POST body
          schema:
            $ref: "#/definitions/ErrorMessage"
  /trains:
    get:
      tags:
        - "train"
      summary: "Gets all trains"
      operationId : "getTrains"
      responses:
        200:
          description: "successful operation"
          schema: 
            #$ref: "#/definitions/trains"
        500:
          description: "error while getting data from db"
          schema:
            #$ref: "#/definitions/internalservererror"
        204:
          description: "No Content"
          schema: 
            #$ref: "#/definitions/nocontent"
  /train:
    get:
      tags:
        - "train"
      summary: "Gets single train"
      operationId: "getTrain"
      responses:
        200:
          description: "successful operation"
          schema: 
            #$ref: "#/definitions/train"
        400:
          description: "Bad Request . Couldn't get id"
          schema: 
            #$ref: "#/definitions/badrequest"
        204:
          description: "No Content"
          schema: 
            #$ref: "#/definitions/nocontent"
    post:
      tags:
        - "train"
      summary: "Creates train"
      operationId: "CreateTrain"
      responses:
        200:
          description: "successful operation"
          schema: 
            #$ref: "#/definitions/train"
        500:
          description: "error while adding data into db"
          schema:
            #$ref: "#/definitions/internalservererror"
        204:
          description: "No Content"
          schema: 
            #$ref: "#/definitions/nocontent"
    patch:
      tags:
        - "train"
      summary: "Updates train"
      operationId: "UpdateTrain"
      responses:
        200:
          description: "successful operation"
          schema: 
            #$ref: "#/definitions/train"
        400:
          description: "Bad Request . Couldn't get id"
          schema: 
            #$ref: "#/definitions/badrequest"
        500:
          description: "error while updating data into db"
          schema:
            #$ref: "#/definitions/internalservererror"
        204:
          description: "No Content"
          schema: 
            #$ref: "#/definitions/nocontent"
    delete:
      tags:
        - "train"
      summary: "Deletes Train"
      operationId: "DeleteTrain"
      responses:
        200:
          description: "successful operation"
          schema: 
            #$ref: "#/definitions/train"
        400:
          description: "Bad Request . Couldn't get id"
          schema: 
            #$ref: "#/definitions/badrequest"
        500:
          description: "error while deleting data from db"
          schema:
            #$ref: "#/definitions/internalservererror"
        
definitions:
  HelloMessage:
    type: object
    properties:
      name:
        type: string
        description: User name.
  User:
    type: object
    properties:
      ID:
        type: string
        description: The user ID in DB in UUID format.
      Name:
        type: string
        description: User name.
  ErrorMessage:
    type: object
    properties:
      Message:
        type: string
        description: Error message
